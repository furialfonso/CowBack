// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	gin "github.com/gin-gonic/gin"

	mock "github.com/stretchr/testify/mock"
)

// IAirHandler is an autogenerated mock type for the IAirHandler type
type IAirHandler struct {
	mock.Mock
}

// GetAir provides a mock function with given fields: c
func (_m *IAirHandler) GetAir(c *gin.Context) {
	_m.Called(c)
}

type mockConstructorTestingTNewIAirHandler interface {
	mock.TestingT
	Cleanup(func())
}

// NewIAirHandler creates a new instance of IAirHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIAirHandler(t mockConstructorTestingTNewIAirHandler) *IAirHandler {
	mock := &IAirHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
